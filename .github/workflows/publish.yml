name: publish

on:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Get tag name
      id: get_tag_name
      run: |
        echo "GITHUB_REF: $GITHUB_REF"
        echo "VERSION: ${GITHUB_REF/refs\/tags\/v/}"
        echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
    - uses: actions/checkout@v3
      with:
        ref: master
    - name: Update version.py
      run: |
        VERSION=${{ steps.get_tag_name.outputs.VERSION }}
        echo "Updating version.py to $VERSION"
        echo "# __version__ is set by CI based on release tag on GitHub" > cxroots/version.py
        echo "__version__ = \"$VERSION\"" >> cxroots/version.py
    - name: Build docs
      uses: ./.github/actions/build-docs
      env:
        SPHINX_GITHUB_CHANGELOG_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Autoupdate documentation for ${{ steps.get_tag_name.outputs.VERSION }}
        file_pattern: docs/* cxroots/version.py
        branch: master
    - name: Build wheel
      run: python setup.py sdist bdist_wheel
    - name: Publish with twine
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: twine upload dist/*

  test:
    needs: deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: 
          - '3.8'
          - '3.9'
          - '3.10'
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get tag name
      id: get_tag_name
      run: |
        echo "GITHUB_REF: $GITHUB_REF"
        echo "VERSION: ${GITHUB_REF/refs\/tags\/v/}"
        echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
    - name: Install cxroots from pip
      run: |
        VERSION=${{ steps.get_tag_name.outputs.VERSION }}
        pip install cxroots==$VERSION
    - name: Test import cxroots
      run: python -c "import cxroots"
